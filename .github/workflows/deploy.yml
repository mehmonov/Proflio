name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip install -r requirements/test.txt

    - name: Run tests
      run: |
        source venv/bin/activate
        make test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
    - uses: actions/checkout@v3

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "Host github.com" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts

    - name: Deploy to server
      env:
        PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
      run: |
        ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
          cd /home/$PROJECT_NAME || git clone git@github.com:mehmonov/$PROJECT_NAME.git /home/$PROJECT_NAME
          cd /home/$PROJECT_NAME
          git pull origin master
          make setup-prod
          make mg
          make collectstatic
          sudo supervisorctl restart all
          sudo systemctl reload nginx
        EOF
